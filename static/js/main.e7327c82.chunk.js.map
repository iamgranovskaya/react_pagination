{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","_ref","total","itemsPerPage","currentPage","onPageChange","pageCount","Math","ceil","pageNumbers","i","push","isHandlePrev","isHandleNext","_jsxs","className","children","_jsx","cn","disabled","href","onClick","handlePrev","map","page","active","concat","handleNext","ITEMS_PER_PAGE","items","from","to","numbers","n","getNumbers","App","setCurrentPage","useState","setItemsPerPage","indexOfLastItem","indexOfFirstItem","currentItems","slice","id","defaultValue","onChange","e","target","value","option","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"uLAUO,MAAMA,EAA8BC,IAKpC,IALqC,MAC1CC,EAAK,aACLC,EAAY,YACZC,EAAW,aACXC,GACDJ,EACC,MAAMK,EAAYC,KAAKC,KAAKN,EAAQC,GAC9BM,EAAc,GAEpB,IAAK,IAAIC,EAAI,EAAGA,GAAKJ,EAAWI,GAAK,EACnCD,EAAYE,KAAKD,GAGnB,MAAME,EAA+B,IAAhBR,EACfS,EAAeT,IAAgBE,EAcrC,OACEQ,eAAA,MAAIC,UAAU,aAAYC,SAAA,CACxBC,cAAA,MACEF,UAAWG,IAAG,YAAa,CACzBC,SAAUP,IACTI,SAEHC,cAAA,KACE,UAAQ,WACRF,UAAU,YACVK,KAAK,QACL,gBAAeR,EACfS,QAxBWC,KACZV,GACHP,EAAaD,EAAc,EAC7B,EAqB0BY,SACrB,WAKFP,EAAYc,KAAIC,GACfP,cAAA,MACEF,UAAWG,IAAG,YAAa,CACzBO,OAAQrB,IAAgBoB,IACvBR,SAEHC,cAAA,KACE,UAAQ,WACRF,UAAU,YACVK,KAAI,IAAAM,OAAMF,GACVH,QAASA,IAAMhB,EAAamB,GAAMR,SAEjCQ,QAKPP,cAAA,MACEF,UAAWG,IAAG,YAAa,CACzBC,SAAUN,IACTG,SAEHC,cAAA,KACE,UAAQ,WACRF,UAAU,YACVK,KAAK,QACL,gBAAeP,EACfQ,QAnDWM,KACZd,GACHR,EAAaD,EAAc,EAC7B,EAgD0BY,SACrB,aAIA,ECnFHY,EAAiB,CAAC,EAAG,EAAG,GAAI,IAK5BC,ECVC,SAAoBC,EAAcC,GACvC,MAAMC,EAAU,GAEhB,IAAK,IAAIC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQrB,KAAKsB,GAGf,OAAOD,CACT,CDEcE,CAAW,EAAG,IAAIX,KAAIU,GAAC,QAAAP,OAAYO,KAEpCE,EAAgBA,KAC3B,MAAO/B,EAAagC,GAAkBC,mBAAS,IACxClC,EAAcmC,GAAmBD,mBAAS,GAE3CE,EAAkBnC,EAAcD,EAChCqC,EAAmBD,EAAkBpC,EAErCsC,EAAeZ,EAAMa,MAAMF,EAAkBD,GAUnD,OACEzB,eAAA,OAAKC,UAAU,YAAWC,SAAA,CACxBC,cAAA,MAAAD,SAAI,0BAEJC,cAAA,KAAGF,UAAU,OAAO,UAAQ,OAAMC,SAAA,QAAAU,OACvBtB,EAAW,YAAAsB,OAAWc,EAAmB,EAAC,OAAAd,OAAMa,EA5B7C,MA4B2FA,EAAe,QAAAb,OA5B1G,GA4B4H,OAG1IZ,eAAA,OAAKC,UAAU,iBAAgBC,SAAA,CAC7BC,cAAA,OAAKF,UAAU,0BAAyBC,SACtCC,cAAA,UACE,UAAQ,kBACR0B,GAAG,kBACH5B,UAAU,eACV6B,aApCmB,EAqCnBC,SAvBeC,IACvBR,GAAiBQ,EAAEC,OAAOC,OAC1BZ,EAAe,EAAE,EAqBiBpB,SAEzBY,EAAeL,KAAI0B,GAClBhC,cAAA,UAAqB+B,MAAOC,EAAOjC,SAChCiC,GADUA,SAOnBhC,cAAA,SAAOiC,QAAQ,kBAAkBnC,UAAU,qBAAoBC,SAAC,sBAKlEC,cAACjB,EAAU,CACTE,MAtDY,GAuDZC,aAAcA,EACdC,YAAaA,EACbC,aArCgBmB,GACpBY,EAAeZ,KAuCbP,cAAA,MAAAD,SACGyB,EAAalB,KAAI4B,GAChBlC,cAAA,MAAI,UAAQ,OAAMD,SACfmC,GADqBA,SAKxB,EEtEVC,IAASC,OAAOpC,cAACkB,EAAG,IAAKmB,SAASC,eAAe,Q","file":"static/js/main.e7327c82.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\n\ntype Props = {\n  total: number;\n  itemsPerPage: number;\n  currentPage: number;\n  onPageChange: (page: number) => void;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  itemsPerPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const pageCount = Math.ceil(total / itemsPerPage);\n  const pageNumbers = [];\n\n  for (let i = 1; i <= pageCount; i += 1) {\n    pageNumbers.push(i);\n  }\n\n  const isHandlePrev = currentPage === 1;\n  const isHandleNext = currentPage === pageCount;\n\n  const handlePrev = () => {\n    if (!isHandlePrev) {\n      onPageChange(currentPage - 1);\n    }\n  };\n\n  const handleNext = () => {\n    if (!isHandleNext) {\n      onPageChange(currentPage + 1);\n    }\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li\n        className={cn('page-item', {\n          disabled: isHandlePrev,\n        })}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={isHandlePrev}\n          onClick={handlePrev}\n        >\n          «\n        </a>\n      </li>\n\n      {pageNumbers.map(page => (\n        <li\n          className={cn('page-item', {\n            active: currentPage === page,\n          })}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${page}`}\n            onClick={() => onPageChange(page)}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n\n      <li\n        className={cn('page-item', {\n          disabled: isHandleNext,\n        })}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={isHandleNext}\n          onClick={handleNext}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\nconst ITEMS_PER_PAGE = [3, 5, 10, 20];\nconst TOTAL_ITEMS = 42;\nconst DEFAULT_ITEMS_PER_PAGE = 5;\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42).map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPage, setItemsPerPage] = useState(5);\n\n  const indexOfLastItem = currentPage * itemsPerPage;\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\n\n  const currentItems = items.slice(indexOfFirstItem, indexOfLastItem);\n\n  const handlePerChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    setItemsPerPage(+e.target.value);\n    setCurrentPage(1);\n  };\n\n  const onPageChange = (page: React.SetStateAction<number>) =>\n    setCurrentPage(page);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${indexOfFirstItem + 1} - ${indexOfLastItem > TOTAL_ITEMS ? TOTAL_ITEMS : indexOfLastItem} of ${TOTAL_ITEMS})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            defaultValue={DEFAULT_ITEMS_PER_PAGE}\n            onChange={handlePerChange}\n          >\n            {ITEMS_PER_PAGE.map(option => (\n              <option key={option} value={option}>\n                {option}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={TOTAL_ITEMS}\n        itemsPerPage={itemsPerPage}\n        currentPage={currentPage}\n        onPageChange={onPageChange}\n      />\n\n      <ul>\n        {currentItems.map(item => (\n          <li data-cy=\"item\" key={item}>\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}